{"ast":null,"code":"var _jsxFileName = \"/Users/ulfah.asmaniah/work/sample-fetching/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect, useCallback } from 'react';\nimport './App.css';\nimport CommentResult from './components/CommentResult';\nimport ProductDetail from './components/ProductDetail';\nimport LoadingState from './components/LoadingState';\nimport Form from './components/Form';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [productDetail, setProductDetail] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [isLoadingSubmitData, setIsLoadingSubmitData] = useState(false);\n  const [clearData, setClearData] = useState(false);\n  const [reviewData, setReviewData] = useState('');\n  const refFetchData = useRef(false);\n  const commentData = useCallback(() => {\n    fetch('https://dummyjson.com/c/db8d-b622-4df4-bc74').then(res => res.json()).then(res => {\n      setProductDetail(res);\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    if (!refFetchData.current) {\n      setLoading(true);\n      commentData();\n      refFetchData.current = true;\n    }\n  }, [refFetchData, commentData]);\n  const SubmitMessage = massage => {\n    setIsLoadingSubmitData(true);\n    fetch('https://dummyjson.com/comments/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        body: massage || '',\n        postId: 3,\n        userId: 5\n      })\n    }).then(res => res.json()).then(res => {\n      setReviewData(res);\n      setIsLoadingSubmitData(false);\n      setClearData(true);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerWrapper\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(LoadingState, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProductDetail, {\n        productDetail: productDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CommentResult, {\n        reviewData: reviewData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        action: prop => SubmitMessage(prop),\n        isLoadingSubmitData: isLoadingSubmitData,\n        clearData: clearData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bM9IJL6Bxy9SY2xxbovLvATl7jY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","useEffect","useCallback","CommentResult","ProductDetail","LoadingState","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","productDetail","setProductDetail","isLoading","setLoading","isLoadingSubmitData","setIsLoadingSubmitData","clearData","setClearData","reviewData","setReviewData","refFetchData","commentData","fetch","then","res","json","current","SubmitMessage","massage","method","headers","body","JSON","stringify","postId","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","action","prop","_c","$RefreshReg$"],"sources":["/Users/ulfah.asmaniah/work/sample-fetching/src/App.js"],"sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react';\nimport './App.css';\nimport CommentResult from './components/CommentResult';\nimport ProductDetail from './components/ProductDetail';\nimport LoadingState from './components/LoadingState';\nimport Form from './components/Form';\n\nfunction App() {\n  const [productDetail, setProductDetail] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [isLoadingSubmitData, setIsLoadingSubmitData] = useState(false);\n  const [clearData, setClearData] = useState(false);\n  const [reviewData, setReviewData] = useState('');\n  const refFetchData = useRef(false);\n\n  const commentData = useCallback(() => {\n    fetch('https://dummyjson.com/c/db8d-b622-4df4-bc74')\n    .then(res => res.json())\n    .then(res => {\n      setProductDetail(res);\n      setLoading(false);\n    });\n  },[]);\n\n  useEffect(() => {\n    if (!refFetchData.current) {\n      setLoading(true);\n      commentData();\n      refFetchData.current = true;\n    }\n  }, [refFetchData, commentData]);\n\n  const SubmitMessage = (massage) => {\n    setIsLoadingSubmitData(true);\n    fetch('https://dummyjson.com/comments/add', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        body: massage || '',\n        postId: 3,\n        userId: 5,\n      })\n    })\n    .then(res => res.json())\n    .then(res => {\n      setReviewData(res);\n      setIsLoadingSubmitData(false);\n      setClearData(true);\n    });\n  }\n\n  return (\n    <div className='containerWrapper'>\n      {isLoading ? <LoadingState /> : (\n        <>\n          <ProductDetail productDetail= {productDetail} />\n          <CommentResult reviewData={reviewData} />\n          <Form action={prop => SubmitMessage(prop)} isLoadingSubmitData={isLoadingSubmitData} clearData={clearData} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}